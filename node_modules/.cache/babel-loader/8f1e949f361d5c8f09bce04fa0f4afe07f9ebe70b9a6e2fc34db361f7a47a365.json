{"ast":null,"code":"export default {\n  data() {\n    return {\n      valid: false,\n      sourceIP: '',\n      destinationIP: '',\n      port: null,\n      unitTestResults: [],\n      showResults: false,\n      multiTestFile: null,\n      headers: [{\n        text: 'Source',\n        value: 'source'\n      }, {\n        text: 'Destination',\n        value: 'destination'\n      }, {\n        text: 'Port',\n        value: 'port'\n      }, {\n        text: 'Status',\n        value: 'status'\n      }, {\n        text: 'Description',\n        value: 'description'\n      }]\n    };\n  },\n  methods: {\n    runUnitTest() {\n      // perform the unit test and update the results table\n      this.unitTestResults = [{\n        source: this.sourceIP,\n        destination: this.destinationIP,\n        port: this.port,\n        status: 'Success',\n        description: ''\n      }];\n      this.showResults = true;\n    },\n    runMultiTest() {\n      // perform the multi test\n    }\n  }\n};","map":{"version":3,"names":["data","valid","sourceIP","destinationIP","port","unitTestResults","showResults","multiTestFile","headers","text","value","methods","runUnitTest","source","destination","status","description","runMultiTest"],"sources":["C:\\Users\\abduk\\Downloads\\archi_check\\src\\views\\FluxView.vue"],"sourcesContent":["<template>\n<v-container class=\"text-center\" style=\"max-width: 90%; width: 90%\">\n  <v-card>\n    <v-card-title class=\"headline text-center\">Test de flux</v-card-title>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" md=\"2\">\n        <v-card>\n          <v-img src=\"ununit_testing_low.png\" height=\"200\" width=\"200\"></v-img>\n          <v-card-title>Test unitaire</v-card-title>\n          <v-card-text>\n            <v-form v-model=\"valid\">\n              <v-text-field\n                v-model=\"sourceIP\"\n                label=\"Source IP\"\n                required\n              ></v-text-field>\n              <v-text-field\n                v-model=\"destinationIP\"\n                label=\"Destination IP\"\n                required\n              ></v-text-field>\n              <v-text-field\n                v-model=\"port\"\n                label=\"Port\"\n                type=\"number\"\n                min=\"0\"\n                max=\"65535\"\n                required\n              ></v-text-field>\n              <v-btn @click=\"runUnitTest\" color=\"primary\" :disabled=\"!valid\">\n                Lancer le test\n              </v-btn>\n            </v-form>\n          </v-card-text>\n          <v-card-text>\n            <v-data-table\n              v-if=\"showResults\"\n              :headers=\"headers\"\n              :items=\"unitTestResults\"\n              hide-default-footer\n              class=\"elevation-1\"\n            ></v-data-table>\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-card>\n          <v-img src=\"multi_test_low.png\" height=\"200\" width=\"200\"></v-img>\n          <v-card-title>Multi test</v-card-title>\n          <v-card-text>\n            <v-form v-model=\"valid\" @submit.prevent=\"runMultiTest\">\n              <v-file-input\n                v-model=\"multiTestFile\"\n                label=\"Choisir un fichier\"\n                required\n              ></v-file-input>\n              <v-btn\n                type=\"submit\"\n                color=\"primary\"\n                :disabled=\"!valid\"\n              >\n                Lancer\n              </v-btn>\n            </v-form>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-card>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      valid: false,\n      sourceIP: '',\n      destinationIP: '',\n      port: null,\n      unitTestResults: [],\n      showResults: false,\n      multiTestFile: null,\n      headers: [\n        { text: 'Source', value: 'source' },\n        { text: 'Destination', value: 'destination' },\n        { text: 'Port', value: 'port' },\n        { text: 'Status', value: 'status' },\n        { text: 'Description', value: 'description' },\n      ],\n    }\n  },\n  methods: {\n    runUnitTest() {\n      // perform the unit test and update the results table\n      this.unitTestResults = [\n        {\n          source: this.sourceIP,\n          destination: this.destinationIP,\n          port: this.port,\n          status: 'Success',\n          description: '',\n        },\n      ]\n      this.showResults = true\n    },\n    runMultiTest() {\n      // perform the multi test\n    },\n  },\n}\n</script>"],"mappings":"AA0EA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,KAAK;MACZC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,EAAE;MACjBC,IAAI,EAAE,IAAI;MACVC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,KAAK;MAClBC,aAAa,EAAE,IAAI;MACnBC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACnC;QAAED,IAAI,EAAE,aAAa;QAAEC,KAAK,EAAE;MAAc,CAAC,EAC7C;QAAED,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAC,EAC/B;QAAED,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACnC;QAAED,IAAI,EAAE,aAAa;QAAEC,KAAK,EAAE;MAAc,CAAC;IAEjD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,CAACP,eAAc,GAAI,CACrB;QACEQ,MAAM,EAAE,IAAI,CAACX,QAAQ;QACrBY,WAAW,EAAE,IAAI,CAACX,aAAa;QAC/BC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfW,MAAM,EAAE,SAAS;QACjBC,WAAW,EAAE;MACf,CAAC,CACH;MACA,IAAI,CAACV,WAAU,GAAI,IAAG;IACxB,CAAC;IACDW,YAAYA,CAAA,EAAG;MACb;IAAA;EAEJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}